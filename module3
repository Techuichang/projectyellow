import time
import pymongo
from queue import Queue
import tushare as ts
from apscheduler.schedulers.background import BackgroundScheduler
import  re
import module2 as m2
import module1 as m1

client=pymongo.MongoClient('localhost',27017)
cl=client[u'交易'][u'交易结果']
cl2=client[u'交易'][u'投票结果']


def timectrl():

    def job_getdata():
        m1.q_deal.get()              #数据给实时绘图显示的程序使用
        msg=list(cl.find().sort([('_id', -1)]).limit(1))
        tem=list(msg[0])[1:]




    def job_run():
        m1.q_buy.get()
        msg=list(cl2.find().sort([('_id', -1)]).limit(1))
        for i in list(msg[0])[1:]:                                 #通过list（msg[0]）得到字典msg[0]的key的list,不要头一位_id
            if re.match(r'^\*', msg[0][i]):
                number=m2.deal.cash//float((ts.get_realtime_quotes(msg[0][i][1:6]))['price'][0]) #msg[0]得到字典 msg[0][i]得到key为i的value 去除第一位交易符号(功能为使用四分之一的现金进行投资
                number=number//4
                m2.deal(msg[0][i][1:6]).shortfuc(number)
            elif re.match(r'^\$', msg[0][i]):
                number=m2.deal.cash//float((ts.get_realtime_quotes(msg[0][i][1:6]))['price'][0])
                number=number//4
                m2.deal(msg[0][i][1:6]).buyfuc(number)
            else:
                print('Error')

    def job_fuc2():
        m2.deal.liquidation()

    def job_fuc3():
        m2.deal.refresh()

    scheduler = BackgroundScheduler()

    scheduler.add_job(job_run(), 'interval', seconds=15, start_date='2019-09-10 18:23:00',
                      end_date='2019-11-10 18:25:00')
    scheduler.add_job(job_fuc2, 'interval', seconds=5, start_date='2019-09-09 02:23:00' ,
                      end_date='2019-11-09 02:23:00')
    scheduler.add_job(job_fuc3, 'interval', seconds=2, start_date='2019-09-09 02:23:00' ,
                      end_date='2019-11-09 02:23:00')
    scheduler.start()
